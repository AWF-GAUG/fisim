% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/response_designs.R
\name{angle_count}
\alias{angle_count}
\title{Select trees proportional to size using Bitterlich/angle-count method}
\usage{
angle_count(tree_loc, tree_dbh, sample_loc, baf = 1, k = NULL)
}
\arguments{
\item{tree_loc}{A matrix where each row is an individual observation and the
first column is the x-coordinate and the second column is the y-coordinate.}

\item{tree_dbh}{A vector with trunk diameters in cm measured at a height of
1.3 m for each observation in \code{tree_loc} (dbh - diameter at breast
height).}

\item{sample_loc}{A data.table object as returned from
\code{\link{xy_sample}}. The first column is an identifier, the second and
third store sample location coordinates, respectively. The number of rows
corresponds to the size of the sample.}

\item{baf}{Basal area factor. Determines together with the trunk diameter at
1.3 m height up to which distance trees are included in the sample. Typical
values for temperate forest conditions range between 1 and 4. The number of
trees included at a sample location multiplied with the \code{baf} gives a
direct estimate of basal area in square meter per hectare.}

\item{k}{Helper variable needed in the \code{\link{nn2}} function for the
kd-tree search of candidate trees that are possibly included into the
sample. Maximum the numer of rows in \code{tree_loc}. See details.}
}
\value{
An integer matrix where rows represent sample locations and columns
  represent indices of the trees in \code{tree_loc} that are selected at the
  individual sample locations. Zeroes are used to indicate no neighbours and
  to ensure a rectangular data format. See the output of the
  \code{\link[RANN]{nn2}} function.
}
\description{
Select trees proportional to size using Bitterlich/angle-count method
}
\details{
The selection of trees according to the Bitterlich/ange-count method
  was implemented in several steps. First the critical distance up to which a
  tree is selected from a specififc sample location is calculated using
  \code{tree_dbh} and \code{baf}. The larger \code{tree_dbh} and \code{baf},
  the larger the critical distance of inclusion. In the second step the RANN
  package is used to identify candidate trees for inlcusion into the sample
  and their distances to the sample locations. The RANN package is a wrapper
  for the Approximate Near Neighbor (ANN) C++ library allowing for fast
  nearest-neighbor searches using kd-trees. Here, radius search is used,
  meaning that the \code{k}-nearest neighbors within a specific radius are
  searched for. As a radius the maximum critial distance is used. In
  combination with \code{k}, a larger than necessary sample of trees is
  selected at each sample location. If not specified by the user, \code{k} is
  estimated by multiplying the average tree density with the area of a circle
  with the maximum critical distance as radius. Tree density is inferred
  using the \code{density.ppp} function from the spatstat package. Note that
  the estimation costs some extra computation time and it is thus recommended
  to provide a large enough \code{k} when the function is used in
  simulations. In the third and last step, the set of candidate trees is
  querried for trees, where the actual distance to the sample location is
  smaller than the individual critical distance.
}
